census_msa = t(wide.data[1, which(names(wide.data) == "census_msa_1924"):which(names(wide.data) == "census_msa_3263")]),
census_region = t(wide.data[1, which(names(wide.data) == "census_region_1924"):which(names(wide.data) == "census_region_3263")]),
enroll_college = t(wide.data[1, which(names(wide.data) == "enroll_college_1924"):which(names(wide.data) == "enroll_college_3263")]),
week_job_wage = t(wide.data[1, which(names(wide.data) == "week_job_wage_1924"):which(names(wide.data) == "week_job_wage_3263")]),
week_job_allwage = t(wide.data[1, which(names(wide.data) == "week_job_allwage_1924"):which(names(wide.data) == "week_job_allwage_3263")]),
week_job_hour = t(wide.data[1, which(names(wide.data) == "week_job_hour_1924"):which(names(wide.data) == "week_job_hour_3263")]),
week_job_full = t(wide.data[1, which(names(wide.data) == "week_job_full_1924"):which(names(wide.data) == "week_job_full_3263")]),
week_job_occ = t(wide.data[1, which(names(wide.data) == "week_job_occ_1924"):which(names(wide.data) == "week_job_occ_3263")]),
week_job_ind = t(wide.data[1, which(names(wide.data) == "week_job_ind_1924"):which(names(wide.data) == "week_job_ind_3263")]),
week_job_8egp = t(wide.data[1, which(names(wide.data) == "week_job_8egp_1924"):which(names(wide.data) == "week_job_8egp_3263")]),
week_job_12egp = t(wide.data[1, which(names(wide.data) == "week_job_12egp_1924"):which(names(wide.data) == "week_job_12egp_3263")]),
week_job_id = t(wide.data[1, which(names(wide.data) == "week_job_id_1924"):which(names(wide.data) == "week_job_id_3263")]),
week_job_sat = t(wide.data[1, which(names(wide.data) == "week_job_sat_1924"):which(names(wide.data) == "week_job_sat_3263")])
)
# Renames rows and columns
list_var <- c("id", "gender",  "race", "p_edu", "edu_degree", "citizen",
"fam_inc", "asvab", "bdate", "fm_date",
"date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
"major_field", "major_app","major_stem", "major_apst",
"child_res", "child_nonres", "child_all", "census_msa", "census_region", "enroll", "weight",
"job_wage", "job_allwage", "job_hour", "job_full",
"job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat", "job_id", "job_sat_cat")
rownames(long.data) <- NULL
colnames(long.data) <- list_var
head(df$weight)
head(dta$weight_1924)
## Start from id == 1
# Initialize
wide.data <- dta
# Sort the column by column names
wide.data <- wide.data %>% select(order(names(wide.data)))
# Reshape the data
long.data <- data.frame(
# Time-invariant variables: gender, race, p_edu, edu_degree, citizen, fam_inc, asvab, and degree dates
id = wide.data[1, which(names(wide.data) == "id")],
gender = wide.data[1, which(names(wide.data) == "gender")],
race = wide.data[1, which(names(wide.data) == "race")],
p_edu = wide.data[1, which(names(wide.data) == "p_edu")],
edu_degree = wide.data[1, which(names(wide.data) == "edu_degree")],
citizen = wide.data[1, which(names(wide.data) == "citizen")],
fam_inc = wide.data[1, which(names(wide.data) == "fam_inc")],
asvab = wide.data[1, which(names(wide.data) == "asvab")],
bdate = wide.data[1, which(names(wide.data) == "bdate")],
fm_date = wide.data[1, which(names(wide.data) == "fm_date")],
degree_date_HS = wide.data[1, which(names(wide.data) == "degree_date_HS")],
degree_date_AA = wide.data[1, which(names(wide.data) == "degree_date_AA")],
degree_date_BA = wide.data[1, which(names(wide.data) == "degree_date_BA")],
degree_date_MA = wide.data[1, which(names(wide.data) == "degree_date_MA")],
degree_date_PHD = wide.data[1, which(names(wide.data) == "degree_date_PHD")],
degree_date_PROF = wide.data[1, which(names(wide.data) == "degree_date_PROF")],
college_major_field = wide.data[1, which(names(wide.data) == "college_major_field_")],
college_major_app = wide.data[1, which(names(wide.data) == "college_major_app_")],
college_major_stem = wide.data[1, which(names(wide.data) == "college_major_stem_")],
college_major_apst = wide.data[1, which(names(wide.data) == "college_major_apst")],
# Dynamic ranges for the time-varying variables
child_res = t(wide.data[1, which(names(wide.data) == "child_res_1924"):which(names(wide.data) == "child_res_3263")]),
child_nonres = t(wide.data[1, which(names(wide.data) == "child_nonres_1924"):which(names(wide.data) == "child_nonres_3263")]),
child_all = t(wide.data[1, which(names(wide.data) == "child_all_1924"):which(names(wide.data) == "child_all_3263")]),
census_msa = t(wide.data[1, which(names(wide.data) == "census_msa_1924"):which(names(wide.data) == "census_msa_3263")]),
census_region = t(wide.data[1, which(names(wide.data) == "census_region_1924"):which(names(wide.data) == "census_region_3263")]),
enroll_college = t(wide.data[1, which(names(wide.data) == "enroll_college_1924"):which(names(wide.data) == "enroll_college_3263")]),
weight = t(wide.data[i, which(names(wide.data) == "weight_1924"):which(names(wide.data) == "weight_3263")]),
week_job_wage = t(wide.data[1, which(names(wide.data) == "week_job_wage_1924"):which(names(wide.data) == "week_job_wage_3263")]),
week_job_allwage = t(wide.data[1, which(names(wide.data) == "week_job_allwage_1924"):which(names(wide.data) == "week_job_allwage_3263")]),
week_job_hour = t(wide.data[1, which(names(wide.data) == "week_job_hour_1924"):which(names(wide.data) == "week_job_hour_3263")]),
week_job_full = t(wide.data[1, which(names(wide.data) == "week_job_full_1924"):which(names(wide.data) == "week_job_full_3263")]),
week_job_occ = t(wide.data[1, which(names(wide.data) == "week_job_occ_1924"):which(names(wide.data) == "week_job_occ_3263")]),
week_job_ind = t(wide.data[1, which(names(wide.data) == "week_job_ind_1924"):which(names(wide.data) == "week_job_ind_3263")]),
week_job_8egp = t(wide.data[1, which(names(wide.data) == "week_job_8egp_1924"):which(names(wide.data) == "week_job_8egp_3263")]),
week_job_12egp = t(wide.data[1, which(names(wide.data) == "week_job_12egp_1924"):which(names(wide.data) == "week_job_12egp_3263")]),
week_job_id = t(wide.data[1, which(names(wide.data) == "week_job_id_1924"):which(names(wide.data) == "week_job_id_3263")]),
week_job_sat = t(wide.data[1, which(names(wide.data) == "week_job_sat_1924"):which(names(wide.data) == "week_job_sat_3263")])
)
# Renames rows and columns
list_var <- c("id", "gender",  "race", "p_edu", "edu_degree", "citizen",
"fam_inc", "asvab", "bdate", "fm_date",
"date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
"major_field", "major_app","major_stem", "major_apst",
"child_res", "child_nonres", "child_all", "census_msa", "census_region", "enroll", "weight",
"job_wage", "job_allwage", "job_hour", "job_full",
"job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat", "job_id", "job_sat_cat")
rownames(long.data) <- NULL
colnames(long.data) <- list_var
# Each pass of the loop, it creates a nested data file (long.data2) and then appends that
# to the bottom of long form data.
for(i in 2:100){
long.data2 <- data.frame(
# Time-invariant variables: gender, race, p_edu, edu_degree, citizen, fam_inc, asvab, and degree dates
id = wide.data[i, which(names(wide.data) == "id")],
gender = wide.data[i, which(names(wide.data) == "gender")],
race = wide.data[i, which(names(wide.data) == "race")],
p_edu = wide.data[i, which(names(wide.data) == "p_edu")],
edu_degree = wide.data[i, which(names(wide.data) == "edu_degree")],
citizen = wide.data[i, which(names(wide.data) == "citizen")],
fam_inc = wide.data[i, which(names(wide.data) == "fam_inc")],
asvab = wide.data[i, which(names(wide.data) == "asvab")],
bdate = wide.data[i, which(names(wide.data) == "bdate")],
fm_date = wide.data[i, which(names(wide.data) == "fm_date")],
degree_date_HS = wide.data[i, which(names(wide.data) == "degree_date_HS")],
degree_date_AA = wide.data[i, which(names(wide.data) == "degree_date_AA")],
degree_date_BA = wide.data[i, which(names(wide.data) == "degree_date_BA")],
degree_date_MA = wide.data[i, which(names(wide.data) == "degree_date_MA")],
degree_date_PHD = wide.data[i, which(names(wide.data) == "degree_date_PHD")],
degree_date_PROF = wide.data[i, which(names(wide.data) == "degree_date_PROF")],
college_major_field = wide.data[i, which(names(wide.data) == "college_major_field_")],
college_major_app = wide.data[i, which(names(wide.data) == "college_major_app_")],
college_major_stem = wide.data[i, which(names(wide.data) == "college_major_stem_")],
college_major_apst = wide.data[i, which(names(wide.data) == "college_major_apst")],
# Dynamic ranges for the time-varying variables
child_res = t(wide.data[i, which(names(wide.data) == "child_res_1924"):which(names(wide.data) == "child_res_3263")]),
child_nonres = t(wide.data[i, which(names(wide.data) == "child_nonres_1924"):which(names(wide.data) == "child_nonres_3263")]),
child_all = t(wide.data[i, which(names(wide.data) == "child_all_1924"):which(names(wide.data) == "child_all_3263")]),
census_msa = t(wide.data[i, which(names(wide.data) == "census_msa_1924"):which(names(wide.data) == "census_msa_3263")]),
census_region = t(wide.data[i, which(names(wide.data) == "census_region_1924"):which(names(wide.data) == "census_region_3263")]),
enroll_college = t(wide.data[i, which(names(wide.data) == "enroll_college_1924"):which(names(wide.data) == "enroll_college_3263")]),
weight = t(wide.data[i, which(names(wide.data) == "weight_1924"):which(names(wide.data) == "weight_3263")]),
week_job_wage = t(wide.data[i, which(names(wide.data) == "week_job_wage_1924"):which(names(wide.data) == "week_job_wage_3263")]),
week_job_allwage = t(wide.data[i, which(names(wide.data) == "week_job_allwage_1924"):which(names(wide.data) == "week_job_allwage_3263")]),
week_job_hour = t(wide.data[i, which(names(wide.data) == "week_job_hour_1924"):which(names(wide.data) == "week_job_hour_3263")]),
week_job_full = t(wide.data[i, which(names(wide.data) == "week_job_full_1924"):which(names(wide.data) == "week_job_full_3263")]),
week_job_occ = t(wide.data[i, which(names(wide.data) == "week_job_occ_1924"):which(names(wide.data) == "week_job_occ_3263")]),
week_job_ind = t(wide.data[i, which(names(wide.data) == "week_job_ind_1924"):which(names(wide.data) == "week_job_ind_3263")]),
week_job_8egp = t(wide.data[i, which(names(wide.data) == "week_job_8egp_1924"):which(names(wide.data) == "week_job_8egp_3263")]),
week_job_12egp = t(wide.data[i, which(names(wide.data) == "week_job_12egp_1924"):which(names(wide.data) == "week_job_12egp_3263")]),
week_job_id = t(wide.data[i, which(names(wide.data) == "week_job_id_1924"):which(names(wide.data) == "week_job_id_3263")]),
week_job_sat = t(wide.data[i, which(names(wide.data) == "week_job_sat_1924"):which(names(wide.data) == "week_job_sat_3263")])
)
rownames(long.data2) <- NULL
colnames(long.data2)<- list_var
long.data <- rbind(long.data,long.data2)
}
# Save data
dta <- long.data
df <- dta
# Key variables
colnames(df)
df[1,"job_occ"]
typeof(df[1,"job_occ"])
df[df == ""] <- NA
# 3: Numerize cont. vars & date vars
list_cont <- c("fam_inc", "asvab", "bdate", "fm_date",
"date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
"child_res", "child_nonres", "child_all", "weight",
"job_wage", "job_allwage", "job_hour")
# Print the type of each variable in the list
var_types <- sapply(list_cont, function(var) class(df[[var]]))
print(var_types)
# Print the type of each variable in the list
var_types <- sapply(list_cont, function(var) class(df[[var]]))
print(var_types)
# 4: Factorize cat. vars.
list_var <- c("gender", "race", "citizen", "p_edu", "edu_degree",
"census_msa", "census_msa", "enroll",
"major_field", "major_app", "major_stem",
"job_full", "job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat","job_id")
# Print the type of each variable in the list
var_types <- sapply(list_var, function(var) class(df[[var]]))
print(var_types)
# Factorize
df <- df %>% mutate(across(list_var, as.factor))
typeof(df$major_app)
summary(df$major_apst)
# 4: Factorize cat. vars.
list_var <- c("gender", "race", "citizen", "p_edu", "edu_degree",
"census_msa", "census_msa", "enroll",
"major_field", "major_app", "major_stem", "major_apst",
"job_full", "job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat","job_id")
# Print the type of each variable in the list
var_types <- sapply(list_var, function(var) class(df[[var]]))
print(var_types)
# Factorize
df <- df %>% mutate(all_of(list_var, as.factor))
# Factorize
df <- df %>% mutate(across(list_var, as.factor))
# Initialize
df <- dta
# Key variables
colnames(df)
# c("id", "gender",  "race", "p_edu", "edu_degree", "citizen",
#              "fam_inc", "asvab", "bdate", "fm_date",
#              "date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
#              "major_field", "major_app","major_stem", "major_apst",
#              "child_res", "child_nonres", "child_all", "census_msa", "census_region", "enroll", "weight",
#              "job_wage", "job_allwage", "job_hour", "job_full",
#              "job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat", "job_id", "job_sat_cat")
# 2: Replace all blanks("") with NAs.
df[1,"job_occ"]
typeof(df[1,"job_occ"])
df[df == ""] <- NA
# 3: Numerize cont. vars & date vars
list_var <- c("fam_inc", "asvab", "bdate", "fm_date",
"date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
"child_res", "child_nonres", "child_all", "weight",
"job_wage", "job_allwage", "job_hour")
# Print the type of each variable in the list
var_types <- sapply(list_var, function(var) class(df[[var]]))
print(var_types)
# 4: Factorize cat. vars.
list_var <- c("gender", "race", "citizen", "p_edu", "edu_degree",
"census_msa", "census_msa", "enroll",
"major_field", "major_app", "major_stem", "major_apst",
"job_full", "job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat","job_id")
# Print the type of each variable in the list
var_types <- sapply(list_var, function(var) class(df[[var]]))
print(var_types)
# Factorize
df <- df %>% mutate(across(list_var, as.factor))
typeof(df$major_app)
summary(df$major_apst)
typeof(df$major_app)
summary(df$major_app)
# 5: Gen diff. types of  EGP & job_sat variables.
df <- df %>% mutate(
job_8egp = recode(job_8_cat,
"Class 1" = 1,
"Class 2" = 2,
"Class 3" = 3,
"Class 4" = 4,
"Class 5" = 5,
"Class 6" = 6,
"Class 7" = 7,
"Military" = 8
),
job_12egp = recode(job_12egp_cat,
"Class 1" = 1,
"Class 2" = 2,
"Class 3a" = 3,
"Class 3b" = 4,
"Class 4a" = 5,
"Class 4b" = 6,
"Class 4c" = 7,
"Class 5" = 8,
"Class 6" = 9,
"Class 7a" = 10,
"Class 7b" = 11,
"Military" = 12),
job_sat = recode(job_sat_cat,
"Dislike it very much" = 1, "Dislike it somewhat" = 2, "Think it is OK" = 3,
"Like it fairly well" = 4, "Like it very much" = 5
)
)
# 5: Gen diff. types of  EGP & job_sat variables.
df <- df %>% mutate(
job_8egp = recode(job_8egp_cat,
"Class 1" = 1,
"Class 2" = 2,
"Class 3" = 3,
"Class 4" = 4,
"Class 5" = 5,
"Class 6" = 6,
"Class 7" = 7,
"Military" = 8
),
job_12egp = recode(job_12egp_cat,
"Class 1" = 1,
"Class 2" = 2,
"Class 3a" = 3,
"Class 3b" = 4,
"Class 4a" = 5,
"Class 4b" = 6,
"Class 4c" = 7,
"Class 5" = 8,
"Class 6" = 9,
"Class 7a" = 10,
"Class 7b" = 11,
"Military" = 12),
job_sat = recode(job_sat_cat,
"Dislike it very much" = 1, "Dislike it somewhat" = 2, "Think it is OK" = 3,
"Like it fairly well" = 4, "Like it very much" = 5
)
)
table(df$job_sat_cat, df$job_sat)
table(df$job_8egp_cat, df$job_8egp)
df <- df %>% mutate(
p_edu_lv = factor(p_edu, levels=c("Missing","<HS","HS","Some College","BA or more"), order = T),
edu_degree_lv = factor(edu_degree, levels=c("Missing","<HS","HS/GED","AA","BA","BA+"), order = T),
job_full_lv = factor(job_full, levels=c("Missing","Not employed","Part-time","Full-time"), order = T),
job_12egp_lv = factor(job_12egp, levels=c(1,2,3,4,5,6,7,8,9,10,11,12), order = T),
job_8egp_lv = factor(job_8egp, levels=c(1,2,3,4,5,6,7,8), order = T),
job_sat_lv = factor(job_sat, levels=c(1,2,3,4,5), order = T)
)
summary(df$p_edu)
levelof(df$p_edu)
levels(df$p_edu)
summary(df$p_edu_lv)
levels(df$p_edulv)
# List: "p_edu", "edu_degree", "job_full", "job_12egp", "job_sat"
df <- df %>% mutate(
p_edu_lv = factor(p_edu, levels=c("Missing","<HS","HS","Some College","BA or more"), order = T),
edu_degree_lv = factor(edu_degree, levels=c("Missing","<HS","HS/GED","AA","BA","BA+"), order = T),
job_full_lv = factor(job_full, levels=c("Missing","Not employed","Part-time","Full-time"), order = T),
job_12egp_lv = factor(job_12egp, levels=c(1,2,3,4,5,6,7,8,9,10,11,12), order = T),
job_8egp_lv = factor(job_8egp, levels=c(1,2,3,4,5,6,7,8), order = T),
job_sat_lv = factor(job_sat, levels=c(1,2,3,4,5), order = T)
)
summary(df$p_edu_lv)
levels(df$p_edulv)
typeof(df$id)
typeof(df$major_app)
levels(df$p_edu_lv)
dta <- df
nrow(df)/8984
length(unique(df))
length(unique(df$id))
# Assign cw
nid <- length(unique(df$id))
nid
rep(1:3, times = 3)
nid <- length(unique(df$id))
w1 <- 1924
wn <- 3263
long.dta$cw <- rep(w1:wn, times = nid)
long.data$cw <- rep(w1:wn, times = nid)
dta <- long.data
# Initialize
df <- dta
colnames(df)
# Initialize
df <- dta
# Key variables
colnames(df)
# c("id", "gender",  "race", "p_edu", "edu_degree", "citizen",
#              "fam_inc", "asvab", "bdate", "fm_date",
#              "date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
#              "major_field", "major_app","major_stem", "major_apst",
#              "child_res", "child_nonres", "child_all", "census_msa", "census_region", "enroll", "weight",
#              "job_wage", "job_allwage", "job_hour", "job_full",
#              "job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat", "job_id", "job_sat_cat", "cw")
# 2: Replace all blanks("") with NAs.
df[1,"job_occ"]
typeof(df[1,"job_occ"])
df[df == ""] <- NA
# 3: Numerize cont. vars & date vars
list_var <- c("fam_inc", "asvab", "bdate", "fm_date",
"date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
"child_res", "child_nonres", "child_all", "weight",
"job_wage", "job_allwage", "job_hour")
# Print the type of each variable in the list
var_types <- sapply(list_var, function(var) class(df[[var]]))
print(var_types)
# 4: Factorize cat. vars.
list_var <- c("gender", "race", "citizen", "p_edu", "edu_degree",
"census_msa", "census_msa", "enroll",
"major_field", "major_app", "major_stem", "major_apst",
"job_full", "job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat","job_id")
# Print the type of each variable in the list
var_types <- sapply(list_var, function(var) class(df[[var]]))
print(var_types)
# Factorize
df <- df %>% mutate(across(list_var, as.factor))
typeof(df$major_app)
summary(df$major_app)
typeof(df$id)
# 5: Gen diff. types of  EGP & job_sat variables.
df <- df %>% mutate(
job_8egp = recode(job_8egp_cat,
"Class 1" = 1,
"Class 2" = 2,
"Class 3" = 3,
"Class 4" = 4,
"Class 5" = 5,
"Class 6" = 6,
"Class 7" = 7,
"Military" = 8
),
job_12egp = recode(job_12egp_cat,
"Class 1" = 1,
"Class 2" = 2,
"Class 3a" = 3,
"Class 3b" = 4,
"Class 4a" = 5,
"Class 4b" = 6,
"Class 4c" = 7,
"Class 5" = 8,
"Class 6" = 9,
"Class 7a" = 10,
"Class 7b" = 11,
"Military" = 12),
job_sat = recode(job_sat_cat,
"Dislike it very much" = 1, "Dislike it somewhat" = 2, "Think it is OK" = 3,
"Like it fairly well" = 4, "Like it very much" = 5
)
)
table(df$job_8egp_cat, df$job_8egp)
table(df$job_sat_cat, df$job_sat)
# 6: Level ordinal cat. vars.
# List: "p_edu", "edu_degree", "job_full", "job_12egp", "job_sat"
df <- df %>% mutate(
p_edu_lv = factor(p_edu, levels=c("Missing","<HS","HS","Some College","BA or more"), order = T),
edu_degree_lv = factor(edu_degree, levels=c("Missing","<HS","HS/GED","AA","BA","BA+"), order = T),
job_full_lv = factor(job_full, levels=c("Missing","Not employed","Part-time","Full-time"), order = T),
job_12egp_lv = factor(job_12egp, levels=c(1,2,3,4,5,6,7,8,9,10,11,12), order = T),
job_8egp_lv = factor(job_8egp, levels=c(1,2,3,4,5,6,7,8), order = T),
job_sat_lv = factor(job_sat, levels=c(1,2,3,4,5), order = T)
)
summary(df$p_edu_lv)
levels(df$p_edu_lv)
# Save data
dta <- df
# Check
summary(df)
## Start from id == 1
# Initialize
wide.data <- dta_orig
# Sort the column by column names
wide.data <- wide.data %>% select(order(names(wide.data)))
# Reshape the data
long.data <- data.frame(
# Time-invariant variables: gender, race, p_edu, edu_degree, citizen, fam_inc, asvab, and degree dates
id = wide.data[1, which(names(wide.data) == "id")],
gender = wide.data[1, which(names(wide.data) == "gender")],
race = wide.data[1, which(names(wide.data) == "race")],
p_edu = wide.data[1, which(names(wide.data) == "p_edu")],
edu_degree = wide.data[1, which(names(wide.data) == "edu_degree")],
citizen = wide.data[1, which(names(wide.data) == "citizen")],
fam_inc = wide.data[1, which(names(wide.data) == "fam_inc")],
asvab = wide.data[1, which(names(wide.data) == "asvab")],
bdate = wide.data[1, which(names(wide.data) == "bdate")],
fm_date = wide.data[1, which(names(wide.data) == "fm_date")],
degree_date_HS = wide.data[1, which(names(wide.data) == "degree_date_HS")],
degree_date_AA = wide.data[1, which(names(wide.data) == "degree_date_AA")],
degree_date_BA = wide.data[1, which(names(wide.data) == "degree_date_BA")],
degree_date_MA = wide.data[1, which(names(wide.data) == "degree_date_MA")],
degree_date_PHD = wide.data[1, which(names(wide.data) == "degree_date_PHD")],
degree_date_PROF = wide.data[1, which(names(wide.data) == "degree_date_PROF")],
college_major_field = wide.data[1, which(names(wide.data) == "college_major_field_")],
college_major_app = wide.data[1, which(names(wide.data) == "college_major_app_")],
college_major_stem = wide.data[1, which(names(wide.data) == "college_major_stem_")],
college_major_apst = wide.data[1, which(names(wide.data) == "college_major_apst")],
# Dynamic ranges for the time-varying variables
child_res = t(wide.data[1, which(names(wide.data) == "child_res_1924"):which(names(wide.data) == "child_res_3263")]),
child_nonres = t(wide.data[1, which(names(wide.data) == "child_nonres_1924"):which(names(wide.data) == "child_nonres_3263")]),
child_all = t(wide.data[1, which(names(wide.data) == "child_all_1924"):which(names(wide.data) == "child_all_3263")]),
census_msa = t(wide.data[1, which(names(wide.data) == "census_msa_1924"):which(names(wide.data) == "census_msa_3263")]),
census_region = t(wide.data[1, which(names(wide.data) == "census_region_1924"):which(names(wide.data) == "census_region_3263")]),
enroll_college = t(wide.data[1, which(names(wide.data) == "enroll_college_1924"):which(names(wide.data) == "enroll_college_3263")]),
weight = t(wide.data[i, which(names(wide.data) == "weight_1924"):which(names(wide.data) == "weight_3263")]),
week_job_wage = t(wide.data[1, which(names(wide.data) == "week_job_wage_1924"):which(names(wide.data) == "week_job_wage_3263")]),
week_job_allwage = t(wide.data[1, which(names(wide.data) == "week_job_allwage_1924"):which(names(wide.data) == "week_job_allwage_3263")]),
week_job_hour = t(wide.data[1, which(names(wide.data) == "week_job_hour_1924"):which(names(wide.data) == "week_job_hour_3263")]),
week_job_full = t(wide.data[1, which(names(wide.data) == "week_job_full_1924"):which(names(wide.data) == "week_job_full_3263")]),
week_job_occ = t(wide.data[1, which(names(wide.data) == "week_job_occ_1924"):which(names(wide.data) == "week_job_occ_3263")]),
week_job_ind = t(wide.data[1, which(names(wide.data) == "week_job_ind_1924"):which(names(wide.data) == "week_job_ind_3263")]),
week_job_8egp = t(wide.data[1, which(names(wide.data) == "week_job_8egp_1924"):which(names(wide.data) == "week_job_8egp_3263")]),
week_job_12egp = t(wide.data[1, which(names(wide.data) == "week_job_12egp_1924"):which(names(wide.data) == "week_job_12egp_3263")]),
week_job_id = t(wide.data[1, which(names(wide.data) == "week_job_id_1924"):which(names(wide.data) == "week_job_id_3263")]),
week_job_sat = t(wide.data[1, which(names(wide.data) == "week_job_sat_1924"):which(names(wide.data) == "week_job_sat_3263")])
)
# Renames rows and columns
list_var <- c("id", "gender",  "race", "p_edu", "edu_degree", "citizen",
"fam_inc", "asvab", "bdate", "fm_date",
"date_HS", "date_AA", "date_BA", "date_MA", "date_PHD", "date_PROF",
"major_field", "major_app","major_stem", "major_apst",
"child_res", "child_nonres", "child_all", "census_msa", "census_region", "enroll", "weight",
"job_wage", "job_allwage", "job_hour", "job_full",
"job_occ", "job_ind", "job_8egp_cat", "job_12egp_cat", "job_id", "job_sat_cat")
rownames(long.data) <- NULL
colnames(long.data) <- list_var
# Each pass of the loop, it creates a nested data file (long.data2) and then appends that
# to the bottom of long form data.
for(i in 2:nrow(wide.data)){
long.data2 <- data.frame(
# Time-invariant variables: gender, race, p_edu, edu_degree, citizen, fam_inc, asvab, and degree dates
id = wide.data[i, which(names(wide.data) == "id")],
gender = wide.data[i, which(names(wide.data) == "gender")],
race = wide.data[i, which(names(wide.data) == "race")],
p_edu = wide.data[i, which(names(wide.data) == "p_edu")],
edu_degree = wide.data[i, which(names(wide.data) == "edu_degree")],
citizen = wide.data[i, which(names(wide.data) == "citizen")],
fam_inc = wide.data[i, which(names(wide.data) == "fam_inc")],
asvab = wide.data[i, which(names(wide.data) == "asvab")],
bdate = wide.data[i, which(names(wide.data) == "bdate")],
fm_date = wide.data[i, which(names(wide.data) == "fm_date")],
degree_date_HS = wide.data[i, which(names(wide.data) == "degree_date_HS")],
degree_date_AA = wide.data[i, which(names(wide.data) == "degree_date_AA")],
degree_date_BA = wide.data[i, which(names(wide.data) == "degree_date_BA")],
degree_date_MA = wide.data[i, which(names(wide.data) == "degree_date_MA")],
degree_date_PHD = wide.data[i, which(names(wide.data) == "degree_date_PHD")],
degree_date_PROF = wide.data[i, which(names(wide.data) == "degree_date_PROF")],
college_major_field = wide.data[i, which(names(wide.data) == "college_major_field_")],
college_major_app = wide.data[i, which(names(wide.data) == "college_major_app_")],
college_major_stem = wide.data[i, which(names(wide.data) == "college_major_stem_")],
college_major_apst = wide.data[i, which(names(wide.data) == "college_major_apst")],
# Dynamic ranges for the time-varying variables
child_res = t(wide.data[i, which(names(wide.data) == "child_res_1924"):which(names(wide.data) == "child_res_3263")]),
child_nonres = t(wide.data[i, which(names(wide.data) == "child_nonres_1924"):which(names(wide.data) == "child_nonres_3263")]),
child_all = t(wide.data[i, which(names(wide.data) == "child_all_1924"):which(names(wide.data) == "child_all_3263")]),
census_msa = t(wide.data[i, which(names(wide.data) == "census_msa_1924"):which(names(wide.data) == "census_msa_3263")]),
census_region = t(wide.data[i, which(names(wide.data) == "census_region_1924"):which(names(wide.data) == "census_region_3263")]),
enroll_college = t(wide.data[i, which(names(wide.data) == "enroll_college_1924"):which(names(wide.data) == "enroll_college_3263")]),
weight = t(wide.data[i, which(names(wide.data) == "weight_1924"):which(names(wide.data) == "weight_3263")]),
week_job_wage = t(wide.data[i, which(names(wide.data) == "week_job_wage_1924"):which(names(wide.data) == "week_job_wage_3263")]),
week_job_allwage = t(wide.data[i, which(names(wide.data) == "week_job_allwage_1924"):which(names(wide.data) == "week_job_allwage_3263")]),
week_job_hour = t(wide.data[i, which(names(wide.data) == "week_job_hour_1924"):which(names(wide.data) == "week_job_hour_3263")]),
week_job_full = t(wide.data[i, which(names(wide.data) == "week_job_full_1924"):which(names(wide.data) == "week_job_full_3263")]),
week_job_occ = t(wide.data[i, which(names(wide.data) == "week_job_occ_1924"):which(names(wide.data) == "week_job_occ_3263")]),
week_job_ind = t(wide.data[i, which(names(wide.data) == "week_job_ind_1924"):which(names(wide.data) == "week_job_ind_3263")]),
week_job_8egp = t(wide.data[i, which(names(wide.data) == "week_job_8egp_1924"):which(names(wide.data) == "week_job_8egp_3263")]),
week_job_12egp = t(wide.data[i, which(names(wide.data) == "week_job_12egp_1924"):which(names(wide.data) == "week_job_12egp_3263")]),
week_job_id = t(wide.data[i, which(names(wide.data) == "week_job_id_1924"):which(names(wide.data) == "week_job_id_3263")]),
week_job_sat = t(wide.data[i, which(names(wide.data) == "week_job_sat_1924"):which(names(wide.data) == "week_job_sat_3263")])
)
rownames(long.data2) <- NULL
colnames(long.data2)<- list_var
long.data <- rbind(long.data,long.data2)
}
# Load packages
library(dplyr)
library(tidyverse)
library(broom)
library(ggeffects)
library(ggplot2)
